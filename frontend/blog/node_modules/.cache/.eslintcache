[{"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\frontend\\blog\\src\\routes\\Main.js":"1","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\index.js":"2","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\reportWebVitals.js":"3","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\App.js":"4","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\SignupForm.js":"5","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\LoginForm.js":"6","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\Main.js":"7","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\component\\Nav.js":"8","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\RealSwim.js":"9","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\Member.js":"10","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\Setting.js":"11"},{"size":801,"mtime":1684559757460,"results":"12","hashOfConfig":"13"},{"size":667,"mtime":1685251431478,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1683029905509,"results":"16","hashOfConfig":"15"},{"size":1014,"mtime":1685784819969,"results":"17","hashOfConfig":"15"},{"size":5216,"mtime":1686140796539,"results":"18","hashOfConfig":"15"},{"size":3550,"mtime":1686127949462,"results":"19","hashOfConfig":"15"},{"size":885,"mtime":1686455138764,"results":"20","hashOfConfig":"15"},{"size":654,"mtime":1686127946248,"results":"21","hashOfConfig":"15"},{"size":3131,"mtime":1686458642746,"results":"22","hashOfConfig":"15"},{"size":4009,"mtime":1685784799312,"results":"23","hashOfConfig":"15"},{"size":9241,"mtime":1686140251282,"results":"24","hashOfConfig":"15"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"117uwn3",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"c1aywo",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\frontend\\blog\\src\\routes\\Main.js",[],[],"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\index.js",["64"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );",[],"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\reportWebVitals.js",[],[],"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\App.js",[],["65","66","67","68"],"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\SignupForm.js",["69","70","71"],[],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/SignupForm.css\";\r\n\r\nfunction SignupForm() {\r\n  let container = document.getElementById(\"container\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [adress, setAdress] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  \r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleConfirmPassword = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleAdressChange = (e) => {\r\n    setAdress(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const signUp = {\r\n      \"email\": email,\r\n      \"pwd\": password,\r\n      \"poolName\": name,\r\n      \"poolNum\": number,\r\n      \"poolAdress\": adress\r\n    };\r\n\r\n    try {\r\n      await axios.post(\"/admin/sign-up\", signUp);\r\n      navigateLogin();\r\n    } catch (err) {}\r\n\r\n    // 회원가입 후에 필요한 처리를 수행합니다.\r\n    // 예를 들어, 회원가입 성공 시에 다른 페이지로 이동하거나 상태를 업데이트하는 등의 작업을 수행할 수 있습니다.\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const navigateLogin = () => {\r\n    navigate(\"/login\");\r\n  };\r\n  const navigateSignup = () => {\r\n    navigate(\"/signup\");\r\n  };\r\n\r\n  const signUp = () => {\r\n    fetch(\"3.37.74.123/admin/sign-up\", {\r\n      //회원가입시 입력한 값들이 서버로 전송될 수 있는 주소\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: email,\r\n        pwd: password,\r\n        poolName: name,\r\n        poolNum: number,\r\n        poolAdress: adress,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => console.log(\"결과: \", result));\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"title\">\r\n        <h1>회원가입</h1>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col align-items-center flex-col sign-up\">\r\n              <div className=\"form-wrapper align-items-center\">\r\n                <div className=\"form sign-up\">\r\n                  <div className=\"input-group\">\r\n                    <i className=\"bx bxs-user\"></i>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      value={name}\r\n                      onChange={handleNameChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"input-group\">\r\n                    <i className=\"bx bx-mail-send\"></i>\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={email}\r\n                      onChange={handleEmailChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"input-group\">\r\n                    <i className=\"bx bxs-lock-alt\"></i>\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={password}\r\n                      onChange={handlePasswordChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"input-group\">\r\n                    <i className=\"bx bxs-lock-alt\"></i>\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm password\"\r\n                      value={confirmpassword}\r\n                      onChange={handleConfirmPassword}\r\n                    />\r\n                  </div>\r\n                  <div className=\"input-group\">\r\n                    <i className=\"bx bxs-lock-alt\"></i>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Phone number\"\r\n                      value={number}\r\n                      onChange={handleNumberChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"input-group\">\r\n                    <i className=\"bx bxs-lock-alt\"></i>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"adress\"\r\n                      value={adress}\r\n                      onChange={handleAdressChange}\r\n                    />\r\n                  </div>\r\n                  <button type=\"submit\">Sign up</button>\r\n                  <br></br>\r\n                  <div id=\"login\">\r\n                    <span>이미 가입하셨나요?</span>\r\n                    <button onClick={navigateLogin}>로그인</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\LoginForm.js",["72","73"],[],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../component/Nav.js\";\r\n\r\nfunction LoginForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Email:', email);\r\n    console.log('Password:', password);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const navigateLogin = () => {\r\n    navigate(\"/login\");\r\n  };\r\n  const navigateSignup = () => {\r\n    navigate(\"/signup\");\r\n  };\r\n  const navigateMain = () => {\r\n    navigate(\"/setting\");\r\n};\r\n\r\n\r\n  const handleSubmit2 = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const login = {\r\n      \"email\": email,\r\n      \"pwd\": password,\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post(\"/admin/sign-in\", login); // 응답을 받아옴\r\n      console.log(response)\r\n      if (response.data.isSuccess === true) { // response.data로 응답 데이터에 접근\r\n        window.localStorage.setItem(\"token\", response.data.access_token); // 응답 데이터의 access_token을 localStorage에 저장\r\n        navigateMain();\r\n      } else {\r\n        alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n        console.log(\"Email:\", email);\r\n        console.log(\"Password:\", password);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className=\"title\">\r\n        <h1 style={{fontFamily:\"JalnanOTF\"}}>로그인</h1>\r\n        <img id=\"logo\" style={{marginTop: \"0%\"}} alt = \"logo\" src=\"img/aupuh_logo.png\" />\r\n      </div>\r\n      <form onSubmit={handleSubmit2}>\r\n      <div className='container'>\r\n        <div className=\"row\">\r\n          <div className=\"col align-items-center flex-col sign-up\">\r\n            <div className=\"form-wrapper align-items-center\">\r\n              <div className=\"form login\">\r\n                <div className=\"input-group\">\r\n                  <i className='bx bx-mail-send'></i>\r\n                  <input type=\"email\" placeholder=\"Email\" value={email} onChange={handleEmailChange}/>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <i className='bx bxs-lock-alt'></i>\r\n                  <input type=\"password\" placeholder=\"Password\" value={password} onChange={handlePasswordChange}/>\r\n                </div>\r\n                <button type='submit'>로그인 </button>\r\n                <div>\r\n                  \r\n                  <span>\r\n                    회원이 아니신가요?\r\n                  </span>\r\n                  <div id=\"login\">\r\n                    <button onClick={navigateSignup}style={{padding :\"5px\"}}>회원가입</button>\r\n                  </div>\r\n               \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </form>\r\n    </div>\r\n    // <form onSubmit={handleSubmit}>\r\n    //   <div>\r\n    //     <label>Email:</label>\r\n    //     <input type=\"email\" value={email} onChange={handleEmailChange} />\r\n    //   </div>\r\n    //   <div>\r\n    //     <label>Password:</label>\r\n    //     <input type=\"password\" value={password} onChange={handlePasswordChange} />\r\n    //   </div>\r\n    //   <button type=\"submit\">Login</button>\r\n    // </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\Main.js",[],[],"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\component\\Nav.js",["74","75"],[],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\nimport './Nav.css';\r\nimport { Routes } from 'react-router-dom';\r\n\r\nfunction Nav(){\r\n\r\n    return (\r\n        <div>\r\n            <div className='navbar'>\r\n                <Link className='navbarMenu' to = {'/realswim'}>실시간 수영장</Link>\r\n                <Link className='navbarMenu' to = {'/member'}>회원 관리</Link>\r\n                <Link className='navbarMenu' to = {'/setting'}>관리자 설정</Link>\r\n                <Link className='navbarMenu' to = {'/login'}>어푸 수영장</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\RealSwim.js",["76","77","78","79","80","81"],[],"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\Member.js",[],[],"C:\\Users\\정재혁\\OneDrive - dgu.edu\\바탕 화면\\4학년1학기\\융합캡스톤디자인\\2023-1-SCS4031-Ahpuh\\frontend\\blog\\src\\routes\\Setting.js",["82"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../styles/Setting.css';\r\n\r\nfunction Setting(){\r\n    const [selectedImage1, setSelectedImage1] = useState(null);\r\n    const [selectedImage2, setSelectedImage2] = useState(null);\r\n    const [selectedImage3, setSelectedImage3] = useState(null);\r\n    const [points1, setPoints1] = useState([]);\r\n    const [points2, setPoints2] = useState([]);\r\n    const [points3, setPoints3] = useState([]);\r\n    const [line, setLine] = useState(1);\r\n    const navigate = useNavigate();\r\n    \r\n    const handleLineChange = (e) => {\r\n      setLine(e.target.value);\r\n      console.log(line);\r\n    }\r\n    const navigateRealswim = () => {\r\n      navigate(\"/realswim\");\r\n    };\r\n\r\n\r\n    const handleImageChange1 = (e) => {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n  \r\n      reader.onload = (event) => {\r\n        setSelectedImage1(event.target.result);\r\n      };\r\n  \r\n      if (file) {\r\n        reader.readAsDataURL(file);\r\n        handleImageUpload1(file);\r\n      }\r\n    };\r\n  \r\n    const handleImageUpload1 = (file) => {\r\n      // 서버로 파일 업로드 요청을 보내는 로직을 작성합니다.\r\n      // 예시로는 fetch를 사용하여 POST 요청을 보내고, 응답을 처리합니다.\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n  \r\n      fetch('/api/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // 업로드 후의 처리 로직을 작성합니다.\r\n          console.log('업로드 완료:', data);\r\n          // 추가적인 작업을 수행하거나, 서버로부터 받은 데이터를 활용할 수 있습니다.\r\n        })\r\n        .catch(error => {\r\n          console.error('업로드 실패:', error);\r\n          // 실패 시에 대한 오류 처리 로직을 작성합니다.\r\n        });\r\n    };\r\n    const handleImageChange2 = (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n    \r\n        reader.onload = (event) => {\r\n          setSelectedImage2(event.target.result);\r\n        };\r\n    \r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n          handleImageUpload2(file);\r\n        }\r\n    };\r\n    \r\n    const handleImageUpload2 = (file) => {\r\n        // 서버로 파일 업로드 요청을 보내는 로직을 작성합니다.\r\n        // 예시로는 fetch를 사용하여 POST 요청을 보내고, 응답을 처리합니다.\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n    \r\n        fetch('/api/upload', {\r\n          method: 'POST',\r\n          body: formData\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // 업로드 후의 처리 로직을 작성합니다.\r\n            console.log('업로드 완료:', data);\r\n            // 추가적인 작업을 수행하거나, 서버로부터 받은 데이터를 활용할 수 있습니다.\r\n          })\r\n          .catch(error => {\r\n            console.error('업로드 실패:', error);\r\n            // 실패 시에 대한 오류 처리 로직을 작성합니다.\r\n          });\r\n    };\r\n\r\n    const handleImageChange3 = (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n    \r\n        reader.onload = (event) => {\r\n          setSelectedImage3(event.target.result);\r\n        };\r\n    \r\n        if (file) {\r\n          reader.readAsDataURL(file);\r\n          handleImageUpload3(file);\r\n        }\r\n    };\r\n    \r\n    const handleImageUpload3 = (file) => {\r\n        // 서버로 파일 업로드 요청을 보내는 로직을 작성합니다.\r\n        // 예시로는 fetch를 사용하여 POST 요청을 보내고, 응답을 처리합니다.\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n    \r\n        fetch('/api/upload', {\r\n          method: 'POST',\r\n          body: formData\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // 업로드 후의 처리 로직을 작성합니다.\r\n            console.log('업로드 완료:', data);\r\n            // 추가적인 작업을 수행하거나, 서버로부터 받은 데이터를 활용할 수 있습니다.\r\n          })\r\n          .catch(error => {\r\n            console.error('업로드 실패:', error);\r\n            // 실패 시에 대한 오류 처리 로직을 작성합니다.\r\n          });\r\n    };\r\n  \r\n    const handleImageClick1 = (e) => {\r\n        const image = e.target;\r\n        const imageRect = image.getBoundingClientRect();\r\n        const offsetX = e.clientX - imageRect.left;\r\n        const offsetY = e.clientY - imageRect.top;\r\n\r\n        if (points1.length < 2*line) {\r\n          const updatedPoints = [...points1, { x: offsetX, y: offsetY }];\r\n          setPoints1(updatedPoints);\r\n        } else {\r\n          setPoints1([{ x: offsetX, y: offsetY }]);\r\n        }\r\n    };\r\n    \r\n    const handleImageClick2 = (e) => {\r\n        const image = e.target;\r\n        const imageRect = image.getBoundingClientRect();\r\n        const offsetX = e.clientX - imageRect.left;\r\n        const offsetY = e.clientY - imageRect.top;\r\n    \r\n        if (points2.length < 2*line) {\r\n          const updatedPoints = [...points2, { x: offsetX, y: offsetY }];\r\n          setPoints2(updatedPoints);\r\n        } else {\r\n          setPoints2([{ x: offsetX, y: offsetY }]);\r\n        }\r\n    };\r\n    const handleImageClick3 = (e) => {\r\n        const image = e.target;\r\n        const imageRect = image.getBoundingClientRect();\r\n        const offsetX = e.clientX - imageRect.left;\r\n        const offsetY = e.clientY - imageRect.top;\r\n    \r\n        if (points3.length <  2*line) {\r\n          const updatedPoints = [...points3, { x: offsetX, y: offsetY }];\r\n          setPoints3(updatedPoints);\r\n        } else {\r\n          setPoints3([{ x: offsetX, y: offsetY }]);\r\n        }\r\n    };\r\n    const repeat = (line, point) => {\r\n      const arr = [];\r\n      const head = [];\r\n      const body = [];\r\n      head.push(\r\n          <thead>\r\n            <tr>\r\n                <th>line</th>\r\n                <th>x1</th>\r\n                <th>y1</th>\r\n                <th>x2</th>\r\n                <th>y2</th>\r\n            </tr>\r\n          </thead>\r\n      )\r\n      for (let i = 0;i < line;i++ ){\r\n        body.push(\r\n          <tbody>\r\n            <td>{i+1}번 레인</td>\r\n            <td>{point[2*i].x}</td>\r\n            <td>{point[2*i].y}</td>\r\n            <td>{point[2*i+1].x}</td>\r\n            <td>{point[2*i+1].y}</td>\r\n          </tbody>\r\n        )\r\n      }\r\n      arr.push(\r\n        <table>\r\n          {head}\r\n          {body}\r\n        </table>\r\n      )\r\n      return arr;\r\n    };\r\n  \r\n    return (\r\n      <div style={{  justifyContent: \"center\"}}>\r\n        <h1>수영장 CCTV 설정</h1>\r\n        <div>\r\n          <h2 style={{diplay: \"float\"}}>라인 개수를 입력하세요 : </h2>\r\n          <div className=\"form login\"style={{diplay: \"float\"}}>\r\n                <div class=\"input-group\">\r\n                  <i class='bx bx-mail-send'></i>\r\n                  <input type=\"number\" placeholder=\"개수\" value={line} onChange={(e)=>{setLine(e.target.value);}}/>\r\n                </div>\r\n              </div>\r\n        </div>\r\n        <div>\r\n            <h2>1번 화면</h2>\r\n            <div >\r\n                {selectedImage1 && \r\n                <img src={selectedImage1} alt=\"업로드된 이미지\"  onClick={handleImageClick1} style={{ cursor: 'crosshair' }}/>}\r\n            </div>\r\n            <div>\r\n                {points1.length === 2*line && (\r\n                <div>\r\n                    {repeat(line,points1)}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange1} />\r\n        </div>\r\n        <div>\r\n            <h2>2번 화면</h2>\r\n            <div >\r\n                {selectedImage2 && \r\n                <img src={selectedImage2} alt=\"업로드된 이미지\"  onClick={handleImageClick2} style={{ cursor: 'crosshair' }}/>}\r\n            </div>\r\n            <div>\r\n                {points2.length === 2*line && (\r\n                <div>\r\n                    {repeat(line,points2)}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange2} />\r\n        </div>\r\n        <div>\r\n          <h2>3번 화면</h2>\r\n          <div>\r\n            {selectedImage3 && \r\n            <img src={selectedImage3} alt=\"업로드된 이미지\" onClick={handleImageClick3} style={{ cursor: 'crosshair' }}/>}\r\n          </div>\r\n          <div>\r\n           {points3.length === 2*line && (\r\n              <div>\r\n                {repeat(line,points3)}\r\n              </div>\r\n            )}\r\n           </div>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageChange3} />\r\n        </div>\r\n        <br></br>  <br></br>  <br></br>  \r\n        <div>\r\n          <button className = \"btn\" onClick={navigateRealswim}>확인</button>\r\n        </div>\r\n      </div>\r\n          \r\n    );\r\n  };\r\n  \r\nexport default Setting;",{"ruleId":"83","severity":1,"message":"84","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":23},{"ruleId":"83","severity":1,"message":"87","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":24,"suppressions":"88"},{"ruleId":"83","severity":1,"message":"89","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":23,"suppressions":"90"},{"ruleId":"83","severity":1,"message":"91","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":15,"suppressions":"92"},{"ruleId":"83","severity":1,"message":"93","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":13,"suppressions":"94"},{"ruleId":"83","severity":1,"message":"95","line":7,"column":7,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"83","severity":1,"message":"96","line":62,"column":9,"nodeType":"85","messageId":"86","endLine":62,"endColumn":23},{"ruleId":"83","severity":1,"message":"97","line":66,"column":9,"nodeType":"85","messageId":"86","endLine":66,"endColumn":15},{"ruleId":"83","severity":1,"message":"98","line":18,"column":9,"nodeType":"85","messageId":"86","endLine":18,"endColumn":21},{"ruleId":"83","severity":1,"message":"99","line":25,"column":9,"nodeType":"85","messageId":"86","endLine":25,"endColumn":22},{"ruleId":"83","severity":1,"message":"87","line":2,"column":17,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"100","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"101","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":19},{"ruleId":"83","severity":1,"message":"102","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":23},{"ruleId":"83","severity":1,"message":"103","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":22},{"ruleId":"83","severity":1,"message":"104","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":20},{"ruleId":"83","severity":1,"message":"105","line":10,"column":12,"nodeType":"85","messageId":"86","endLine":10,"endColumn":16},{"ruleId":"83","severity":1,"message":"106","line":12,"column":11,"nodeType":"85","messageId":"86","endLine":12,"endColumn":22},{"ruleId":"83","severity":1,"message":"107","line":16,"column":11,"nodeType":"85","messageId":"86","endLine":16,"endColumn":27},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["108"],"'BrowserRouter' is defined but never used.",["109"],"'Contact' is defined but never used.",["110"],"'About' is defined but never used.",["111"],"'container' is assigned a value but never used.","'navigateSignup' is assigned a value but never used.","'signUp' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'navigateLogin' is assigned a value but never used.","'Routes' is defined but never used.","'ReactPlayer' is defined but never used.","'ScubaDivingIcon' is defined but never used.","'VolumeMuteIcon' is defined but never used.","'VolumeUpIcon' is defined but never used.","'file' is assigned a value but never used.","'videoUpload' is assigned a value but never used.","'handleLineChange' is assigned a value but never used.",{"kind":"112","justification":"113"},{"kind":"112","justification":"113"},{"kind":"112","justification":"113"},{"kind":"112","justification":"113"},"directive",""]